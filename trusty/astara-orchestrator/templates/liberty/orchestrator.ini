[DEFAULT]
debug=True
versbose=True
auth_region=RegionOne

# Nova instance provider
# Currently available:
#  - on_demand: Requests new nova instances as they are required
#  - pez: Pre-provisions pools of instances to be used for appliances.
#         Requires running the astara-pez-service.
#         Note: This feature is marked experimental for Liberty.
instance_provider=on_demand
management_network_id={{ management_network_id }}
management_subnet_id={{ management_subnet_id }}
management_prefix={{ management_prefix }}

# Configure which neutron resource(s) this Rug should be managing.
# Currently available: router, loadbalancer
enabled_drivers=router

# *Deprecated* Use mgt_service_port in individual driver config sections
# instead.
akanda_mgt_service_port=5000

external_network_id={{ external_network_id }}
external_subnet_id={{ external_subnet_id }}
external_prefix={{ external_prefix }}

plug_external_port=False

# Public SSH key to insert into the 'akanda' user of appliance
# VMs.
ssh_public_key=/etc/akanda/akanda.pub

# *Deprecated* Use image_uuid/instance_flavor in the [router] section.
router_image_uuid={{ router_image_uuid }}
router_instance_flavor=1

# *Deprecated* Use ssh_public_key.
router_ssh_public_key=/etc/akanda/akanda.pub

# to plug in rug interface
interface_driver=akanda.rug.common.linux.interface.OVSInterfaceDriver
ovs_integration_bridge=br-int

{% include "parts/rabbitmq" %}

# *Deprecated* use amqp_url instead.
rabbit_password = yetanothersecret
rabbit_host = 192.168.57.200

provider_rules_path=/opt/stack/akanda-rug/etc/provider_rules.json
control_exchange = quantum

# NOTE: Appears the ubuntu neutron deployment doesn't have this enabled.
neutron_port_security_extension_enabled = False

[AGENT]
root_helper=sudo

# If running multiple akanda-rug instances, configure use of an external
# cluster coordinator here. For more information on supported coordination
# backends, see http://docs.openstack.org/developer/tooz/.
# NOTE: This feature is currently marked experimental for Liberty.
[coordination]
enabled = False
url = memcached://localhost:11211
group_id = akanda.rug
heartbeat_interval = 1

{% include "parts/keystone" %}

# Driver configuration
[router]
image_uuid = {{ router_image_uuid }}
instance_flavor = 1
mgt_service_port = 5000

# Pez instance pooling configuration, used when running the astara-pez-service
# process to manage pools of hot-standby # appliance VMs /w the pez instance
# provider (experimental)
[pez]
# The number of hot-standby nodes per pool (1 pool per enabled driver)
pool_size=1

{% include "parts/database" %}
